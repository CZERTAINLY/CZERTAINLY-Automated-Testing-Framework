name: Deploy Sealed Secrets
description: Install and configure Sealed Secrets

runs:
  using: "composite"

  steps:

    - name: Prepare custom key
      shell: bash
      run: |
        if [ -z "$SEALED_SECRETS_KEY" ] || [ -z "$SEALED_SECRETS_CERT" ]; then
          echo "Error: Sealed Secrets key or certificate is not set."
          exit 1
        fi
        
        mkdir -p ${{ github.workspace }}/.kube
        mkdir -p ${{ github.workspace }}/.kube/sealed-secrets
        
        echo "$SEALED_SECRETS_KEY" | base64 -d > ${{ github.workspace }}/.kube/sealed-secrets/private-key.pem
        echo "$SEALED_SECRETS_CERT" | base64 -d > ${{ github.workspace }}/.kube/sealed-secrets/public-key.pem
        
        kubectl create namespace sealed-secrets
        
        kubectl -n sealed-secrets create secret tls sealed-secrets-tls \
          --cert=${{ github.workspace }}/.kube/sealed-secrets/public-key.pem \
          --key=${{ github.workspace }}/.kube/sealed-secrets/private-key.pem
        
        kubectl -n sealed-secrets describe secret sealed-secrets-tls
        
        kubectl -n sealed-secrets label secret sealed-secrets-tls sealedsecrets.bitnami.com/sealed-secrets-key=active

    - name: Installing Sealed Secrets Helm repository
      shell: bash
      run: |
        helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets

    - name: Deploy Sealed Secrets using Helm
      shell: bash
      run: |-
        helm upgrade --install --atomic --create-namespace sealed-secrets sealed-secrets/sealed-secrets \
          --namespace sealed-secrets --timeout 600s

        kubectl describe pods -n sealed-secrets -l app.kubernetes.io/name=sealed-secrets
