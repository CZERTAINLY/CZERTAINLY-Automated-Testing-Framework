name: Create microk8s cluster
description: Install and configure a microk8s cluster

runs:
  using: "composite"

  steps:
    - name: Create k8s cluster
      uses: balchua/microk8s-actions@v0.3.0
      with:
        channel: '1.26/stable'
        addons: '["dns", "rbac", "ingress", "hostpath-storage"]'

    - name: Prepare local kubectl context
      shell: bash
      run: |
        mkdir -p ${{ github.workspace }}/.kube
        sudo microk8s config > ${{ github.workspace }}/.kube/config
        sudo chown -R runner: ${{ github.workspace }}/.kube

    - name: Create internal ingress service
      shell: bash
      run: |
        kubectl apply -n ingress -f - <<'EOF'
        apiVersion: v1
        kind: Service
        metadata:
          name: ingress-nginx-controller
          namespace: ingress
        spec:
          type: ClusterIP
          selector:
            name: nginx-ingress-microk8s
          ports:
            - name: http
              port: 80
              targetPort: 80
            - name: https
              port: 443
              targetPort: 443
        EOF
        
        kubectl -n ingress get all -o wide

    - name: Make czertainly.local resolvable inside the cluster
      shell: bash
      run: |
        kubectl -n kube-system rollout status deployment/coredns --timeout=120s
        kubectl -n kube-system get configmap coredns -o jsonpath='{.data.Corefile}' > Corefile

        grep -q 'czertainly\.local' Corefile && { echo "âœ” rewrite already in place"; exit 0; }
        sed -i '/^[[:space:]]*ready/a\    rewrite name czertainly.local ingress-nginx-controller.ingress.svc.cluster.local' Corefile
        kubectl -n kube-system create configmap coredns --from-file=Corefile=Corefile --dry-run=client -o yaml | kubectl apply -f -

        kubectl -n kube-system rollout restart deployment/coredns
        kubectl -n kube-system rollout status deploy/coredns --timeout=60s
